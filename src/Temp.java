import org.apache.commons.codec.binary.Base64;

import java.nio.charset.Charset;
import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;

public class Temp {
    public static void main(String... args) throws Exception {
        String str = "\\";
        byte[] test = str.getBytes(Charset.forName("UTF-8"));
        System.out.print(test[test.length-1]);


    }

    public static Integer mapLogic(Integer n) {
        if(n<9) return n*2;
        return n *3;
    }

    public static Boolean fillterLogic(Integer n) {
        return n < 9;
    }

    public static void testPredicate () {

    }
    public static void printList() {
        List names = new ArrayList();

        names.add("Mahesh");
        names.add("Suresh");
        names.add("Ramesh");
        names.add("Naresh");
        names.add("Kalpesh");

        names.forEach(System.out::println);
    }

    public Predicate <Integer> moreThan(Integer number) {
        return n -> isGreaterThan(n, number);
    }

    public List<Integer> filerNumbers(List<Integer> numbers, Predicate<Integer> predicate) {
        return numbers.stream().filter(predicate).collect(Collectors.<Integer>toList());
    }

    public boolean isGreaterThan(Integer n, Integer number){
        return n>number;
    }


}